{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Set of useful tips for developers who are using bash, git, mysql, etc. Mkdocs pip install mkdocs - install mkdocs ( more info ) pip install mkdocs-material - install material theme ( more info ) mkdocs serve - start HTTP server mkdocs gh-deploy - deploy to github pages Markdown Cheatsheet","title":"Home"},{"location":"#mkdocs","text":"pip install mkdocs - install mkdocs ( more info ) pip install mkdocs-material - install material theme ( more info ) mkdocs serve - start HTTP server mkdocs gh-deploy - deploy to github pages Markdown Cheatsheet","title":"Mkdocs"},{"location":"bash/","text":"path info file=\"/home/user/file.inc.php\" basename=${file##*/} # file.inc.php filename=${basename%.*} # file.inc extension=${file##*.} # php dirname=${file%/*} # /home/user SSH authentication w/o password cd ~/.ssh ssh-keygen ssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com ssh-add ssh remote.host.com If username has a \u201c@\u201d symbol then use the following: ssh -l user@example.com example.com mkdir .ssh touch .ssh/authorized_keys exit cat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat .ssh/authorized_keys' chmod 700 .ssh chmod 400 .ssh/authorized_keys ssh -l user@example.com example.com Bash prompt w/ path and colors Add the following line to your ~/.bash_profile : Green export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote (yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote Root (red and yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Show colors: for i in {0..255}; do echo -e \\e[38;05;${i}m${i} ; done | column -c 80 -s ' '; echo -e \\e[m for code in $(seq -w 0 255); do for attr in 0 1; do printf %s-%03s %bTest%b\\n ${attr} ${code} \\e[${attr};38;05;${code}m \\e[m ; done; done | column -c $((COLUMNS*2)) Aliases #general alias ll='LC_COLLATE=C ls -la --color=auto' #svn alias ssie='svn st --ignore-externals | grep ^[^xX]' alias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -' VIM ~/.vimrc set nocompatible set backspace=2 set tabstop=4 set expandtab Load additional php.ini when run php from terminal Add the following line into ~/.bashrc file: export PHP_INI_SCAN_DIR=\":$HOME/etc/php70\" Put additional config into ~/etc/php70/php.ini , e.g: memory_limit = -1 Run the command #1 or re-login terminal Check ini paths: php --ini Check memory limit: $ php -i | grep memory_limit memory_limit = -1 = -1 More info on php.net Convert DOS to Unix newlines in current directory excluding .git directory find . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix Use custom SSH port with rsync/ssh/scp/sshfs rsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ . ssh user@server.com -p 2244 scp -P 2244 user@server.com:/html/website_db.sql . sshfs user@server.com:/html -p 2244 server.com Upload multiple files w/o file name duplication scp {,user@example.com:~/}public_html/index.php scp {,user@example.com:~/}public_html/.htaccess scp {,user@example.com:~/}public_html/images/logo.png scp {,user@example.com:~/}public_html/js/jquery.js FIX permissions find . -type f -exec chmod 640 {} \\; find . -type d -exec chmod 750 {} \\; Useful links How to parse command line arguments Statistics Find # of code lines in directory (find . -type f -name '*.php' -print0 | xargs -0 cat) | wc -l Ctrl+C Hook trap ctrl_c INT function ctrl_c() { echo \"Triggered CTRL+C event\" }","title":"Bash"},{"location":"bash/#path-info","text":"file=\"/home/user/file.inc.php\" basename=${file##*/} # file.inc.php filename=${basename%.*} # file.inc extension=${file##*.} # php dirname=${file%/*} # /home/user","title":"path info"},{"location":"bash/#ssh-authentication-wo-password","text":"cd ~/.ssh ssh-keygen ssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com ssh-add ssh remote.host.com If username has a \u201c@\u201d symbol then use the following: ssh -l user@example.com example.com mkdir .ssh touch .ssh/authorized_keys exit cat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat .ssh/authorized_keys' chmod 700 .ssh chmod 400 .ssh/authorized_keys ssh -l user@example.com example.com","title":"SSH authentication w/o password"},{"location":"bash/#bash-prompt-w-path-and-colors","text":"Add the following line to your ~/.bash_profile : Green export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote (yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote Root (red and yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Show colors: for i in {0..255}; do echo -e \\e[38;05;${i}m${i} ; done | column -c 80 -s ' '; echo -e \\e[m for code in $(seq -w 0 255); do for attr in 0 1; do printf %s-%03s %bTest%b\\n ${attr} ${code} \\e[${attr};38;05;${code}m \\e[m ; done; done | column -c $((COLUMNS*2))","title":"Bash prompt w/ path and colors"},{"location":"bash/#aliases","text":"#general alias ll='LC_COLLATE=C ls -la --color=auto' #svn alias ssie='svn st --ignore-externals | grep ^[^xX]' alias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -'","title":"Aliases"},{"location":"bash/#vim","text":"~/.vimrc set nocompatible set backspace=2 set tabstop=4 set expandtab","title":"VIM"},{"location":"bash/#load-additional-phpini-when-run-php-from-terminal","text":"Add the following line into ~/.bashrc file: export PHP_INI_SCAN_DIR=\":$HOME/etc/php70\" Put additional config into ~/etc/php70/php.ini , e.g: memory_limit = -1 Run the command #1 or re-login terminal Check ini paths: php --ini Check memory limit: $ php -i | grep memory_limit memory_limit = -1 = -1 More info on php.net","title":"Load additional php.ini when run php from terminal"},{"location":"bash/#convert-dos-to-unix-newlines-in-current-directory-excluding-git-directory","text":"find . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix","title":"Convert DOS to Unix newlines in current directory excluding .git directory"},{"location":"bash/#use-custom-ssh-port-with-rsyncsshscpsshfs","text":"rsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ . ssh user@server.com -p 2244 scp -P 2244 user@server.com:/html/website_db.sql . sshfs user@server.com:/html -p 2244 server.com","title":"Use custom SSH port with rsync/ssh/scp/sshfs"},{"location":"bash/#upload-multiple-files-wo-file-name-duplication","text":"scp {,user@example.com:~/}public_html/index.php scp {,user@example.com:~/}public_html/.htaccess scp {,user@example.com:~/}public_html/images/logo.png scp {,user@example.com:~/}public_html/js/jquery.js","title":"Upload multiple files w/o file name duplication"},{"location":"bash/#fix-permissions","text":"find . -type f -exec chmod 640 {} \\; find . -type d -exec chmod 750 {} \\;","title":"FIX permissions"},{"location":"bash/#useful-links","text":"How to parse command line arguments","title":"Useful links"},{"location":"bash/#statistics","text":"","title":"Statistics"},{"location":"bash/#find-of-code-lines-in-directory","text":"(find . -type f -name '*.php' -print0 | xargs -0 cat) | wc -l","title":"Find # of code lines in directory"},{"location":"bash/#ctrlc-hook","text":"trap ctrl_c INT function ctrl_c() { echo \"Triggered CTRL+C event\" }","title":"Ctrl+C Hook"},{"location":"composer/","text":"Add a custom packages repository composer config --global repositories.example composer https://packages.example.com/ Install composer package from a local folder mkdir -p ~/composer-packages/ cp vendor-module-x.x.x.zip ~/composer-packages/ cd ~/public_html/ composer config repositories.local artifact ~/composer-packages/ composer require vendor/module #or composer update vendor/module","title":"Composer"},{"location":"composer/#add-a-custom-packages-repository","text":"composer config --global repositories.example composer https://packages.example.com/","title":"Add a custom packages repository"},{"location":"composer/#install-composer-package-from-a-local-folder","text":"mkdir -p ~/composer-packages/ cp vendor-module-x.x.x.zip ~/composer-packages/ cd ~/public_html/ composer config repositories.local artifact ~/composer-packages/ composer require vendor/module #or composer update vendor/module","title":"Install composer package from a local folder"},{"location":"disk/","text":"write iso to disk dd if=os.img of=/dev/sdX bs=1M status=progress oflag=dsync where - oflag=dsync - synchronize I/O for data. RAM disk sudo mount -o size=2G -t tmpfs none my.project.com","title":"Disk"},{"location":"disk/#write-iso-to-disk","text":"dd if=os.img of=/dev/sdX bs=1M status=progress oflag=dsync where - oflag=dsync - synchronize I/O for data.","title":"write iso to disk"},{"location":"disk/#ram-disk","text":"sudo mount -o size=2G -t tmpfs none my.project.com","title":"RAM disk"},{"location":"git/","text":"Daily Routine Push w/o user/password prompt Change origin from https to ssh git remote set-url origin git@github.com:username/projectname.git Update local list of remote branches git branch -a git remote update origin --prune Adding a remote git remote -v git remote add origin https://domain.com/myrepo.git Merge branch as new commit git merge --squash branch_name git commit Setup Global .gitignore git config --global core.excludesfile ~/.gitignore vi ~/.gitignore Add your global ignores, e.g: .idea vendor studio .sass-cache .unison* Store passwords git config --global credential.helper store Workaround with 403 error git config --global --unset-all credential.helper git config --unset-all credential.helper git lg git config --global alias.lg \"log --all --color --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue) %an %Creset %C(yellow)%d%Creset' --abbrev-commit\"","title":"Git"},{"location":"git/#daily-routine","text":"","title":"Daily Routine"},{"location":"git/#push-wo-userpassword-prompt","text":"Change origin from https to ssh git remote set-url origin git@github.com:username/projectname.git","title":"Push w/o user/password prompt"},{"location":"git/#update-local-list-of-remote-branches","text":"git branch -a git remote update origin --prune","title":"Update local list of remote branches"},{"location":"git/#adding-a-remote","text":"git remote -v git remote add origin https://domain.com/myrepo.git","title":"Adding a remote"},{"location":"git/#merge-branch-as-new-commit","text":"git merge --squash branch_name git commit","title":"Merge branch as new commit"},{"location":"git/#setup","text":"","title":"Setup"},{"location":"git/#global-gitignore","text":"git config --global core.excludesfile ~/.gitignore vi ~/.gitignore Add your global ignores, e.g: .idea vendor studio .sass-cache .unison*","title":"Global .gitignore"},{"location":"git/#store-passwords","text":"git config --global credential.helper store","title":"Store passwords"},{"location":"git/#workaround-with-403-error","text":"git config --global --unset-all credential.helper git config --unset-all credential.helper","title":"Workaround with 403 error"},{"location":"git/#git-lg","text":"git config --global alias.lg \"log --all --color --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue) %an %Creset %C(yellow)%d%Creset' --abbrev-commit\"","title":"git lg"},{"location":"htaccess/","text":"Disable Browser Cache for specific folder Place the following line into .htaccess: Header set Cache-Control \"no-store\" \"expr=%{REQUEST_URI}=~/(VendorName1|VendorName2|requirejs-config\\.js)/i\" As result url with \"VendorName\" in path will get Pragma \"no-cache\" http header, so browser won't cache it. This trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only. Basic Auth with URL exception Access /dir/subdir/file.txt file without authorization SetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth AuthType Basic AuthUserFile /home/user/public_html/.htpasswd AuthName \"Restricted Area\" Require valid-user Order allow,deny Allow from env=no_auth Satisfy any Define base path as environment variable for further usage RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$ RewriteRule ^(.*) - [E=BASE:%1] RewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]","title":"Htaccess"},{"location":"htaccess/#disable-browser-cache-for-specific-folder","text":"Place the following line into .htaccess: Header set Cache-Control \"no-store\" \"expr=%{REQUEST_URI}=~/(VendorName1|VendorName2|requirejs-config\\.js)/i\" As result url with \"VendorName\" in path will get Pragma \"no-cache\" http header, so browser won't cache it. This trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only.","title":"Disable Browser Cache for specific folder"},{"location":"htaccess/#basic-auth-with-url-exception","text":"Access /dir/subdir/file.txt file without authorization SetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth AuthType Basic AuthUserFile /home/user/public_html/.htpasswd AuthName \"Restricted Area\" Require valid-user Order allow,deny Allow from env=no_auth Satisfy any","title":"Basic Auth with URL exception"},{"location":"htaccess/#define-base-path-as-environment-variable-for-further-usage","text":"RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$ RewriteRule ^(.*) - [E=BASE:%1] RewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]","title":"Define base path as environment variable for further usage"},{"location":"http2/","text":"Check HTTP2 support curl --http2 -vI https://http1.golang.org/ 2 1 | grep ALPN * ALPN, offering h2 * ALPN, offering http/1.1 * ALPN, server did not agree to a protocol curl --http2 -vI https://http2.golang.org/ 2 1 | grep ALPN * ALPN, offering h2 * ALPN, offering http/1.1 * ALPN, server accepted to use h2 httpd.conf Protocols h2 http/1.1","title":"Http2"},{"location":"http2/#check-http2-support","text":"curl --http2 -vI https://http1.golang.org/ 2 1 | grep ALPN * ALPN, offering h2 * ALPN, offering http/1.1 * ALPN, server did not agree to a protocol curl --http2 -vI https://http2.golang.org/ 2 1 | grep ALPN * ALPN, offering h2 * ALPN, offering http/1.1 * ALPN, server accepted to use h2","title":"Check HTTP2 support"},{"location":"http2/#httpdconf","text":"Protocols h2 http/1.1","title":"httpd.conf"},{"location":"magento1/","text":"Setup Dynamic Base URL INSERT INTO core_config_data (`path`, `value`) VALUES ('web/url/use_store', 1), ('web/unsecure/base_url', '{{base_url}}'), ('web/secure/base_url', '{{base_url}}'), ('web/unsecure/base_link_url', '{{unsecure_base_url}}'), ('web/unsecure/base_skin_url', '{{unsecure_base_url}}skin/'), ('web/unsecure/base_media_url', '{{unsecure_base_url}}media/'), ('web/unsecure/base_js_url', '{{unsecure_base_url}}js/'), ('web/secure/base_link_url', '{{secure_base_url}}'), ('web/secure/base_skin_url', '{{secure_base_url}}skin/'), ('web/secure/base_media_url', '{{secure_base_url}}media/'), ('web/secure/base_js_url', '{{secure_base_url}}js/') ON DUPLICATE KEY UPDATE `value` = VALUES(`value`); CLI clear cache php -r 'require \"app/Mage.php\"; Mage::app()- getCacheInstance()- flush();' Unison profile ~/.unison/magento1.prf include default ignore = Path var/?* ignore = Path var/.?* ignore = Path media force secure urls app/etc/local.xml ?xml version=\"1.0\"? config frontend secure_url all / /all /secure_url /frontend /config","title":"Magento1"},{"location":"magento1/#setup-dynamic-base-url","text":"INSERT INTO core_config_data (`path`, `value`) VALUES ('web/url/use_store', 1), ('web/unsecure/base_url', '{{base_url}}'), ('web/secure/base_url', '{{base_url}}'), ('web/unsecure/base_link_url', '{{unsecure_base_url}}'), ('web/unsecure/base_skin_url', '{{unsecure_base_url}}skin/'), ('web/unsecure/base_media_url', '{{unsecure_base_url}}media/'), ('web/unsecure/base_js_url', '{{unsecure_base_url}}js/'), ('web/secure/base_link_url', '{{secure_base_url}}'), ('web/secure/base_skin_url', '{{secure_base_url}}skin/'), ('web/secure/base_media_url', '{{secure_base_url}}media/'), ('web/secure/base_js_url', '{{secure_base_url}}js/') ON DUPLICATE KEY UPDATE `value` = VALUES(`value`);","title":"Setup Dynamic Base URL"},{"location":"magento1/#cli-clear-cache","text":"php -r 'require \"app/Mage.php\"; Mage::app()- getCacheInstance()- flush();'","title":"CLI clear cache"},{"location":"magento1/#unison-profile","text":"~/.unison/magento1.prf include default ignore = Path var/?* ignore = Path var/.?* ignore = Path media","title":"Unison profile"},{"location":"magento1/#force-secure-urls","text":"app/etc/local.xml ?xml version=\"1.0\"? config frontend secure_url all / /all /secure_url /frontend /config","title":"force secure urls"},{"location":"magento2/","text":"PhpStorm php bin/magento dev:urn-catalog:generate .idea/misc.xml Unison profile ~/.unison/magento2.prf include default ignore = Path var/?* ignore = Path var/.?* ignorenot = Path var/generation ignore = Path pub/media ignore = Path pub/static Create Magento Project cd ~/public_html # create project based on the latest magento version composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition m23x # create project based on specific magento version # composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.2.7 m22x Upgrade Magento Project cp composer.json composer.json.bak composer require magento/product-community-edition 2.2.7 --no-update composer update php bin/magento setup:upgrade Create module package For Marketplace: git clone https://git.example.com/Vendor_Module.git cd Vendor_Module zip -r9 \"vendor-module-1.0.0.zip\" . -x *.git* *.idea* Alternative way (archive will have a path app/code/Vendor/Module/): zip -r9 \"vendor-module-1.0.0.zip\" app/code/Vendor/Module/ -x *.git* Configuration Disable timestamp in static paths like pub/static12345993943/some.js via Magento Admin: Stores Configuration Advanced Developer Static Files Settings Sign Static Files No via SQL query: INSERT INTO core_config_data (`path`, `value`) VALUES (\"dev/static/sign\", 0) ON DUPLICATE KEY UPDATE `value`=0 cli command: Layout Add block with html content referenceContainer name=\"content\" block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\" arguments argument translate=\"true\" name=\"text\" xsi:type=\"string\" Lorem ipsum dolor ... /argument /arguments /block /referenceContainer Add content block by id referenceContainer name=\"content\" block class=\"Magento\\Cms\\Block\\Block\" name=\"my.content.block\" arguments argument name=\"block_id\" xsi:type=\"string\" my-content-block-id /argument /arguments /block /referenceContainer Add block to page head section referenceBlock name=\"head.additional\" block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\" template=\"Vendor_Module::template.phtml\" / /referenceBlock Javascript Show all UI components on the page require('uiRegistry').get(function(item) { console.log(item.name, item); }); Add administrator php bin/magento admin:user:create --admin-user=admin --admin-password=password --admin-email=support@example.com --admin-firstname=Support --admin-lastname=Account","title":"Magento2"},{"location":"magento2/#phpstorm","text":"php bin/magento dev:urn-catalog:generate .idea/misc.xml","title":"PhpStorm"},{"location":"magento2/#unison-profile","text":"~/.unison/magento2.prf include default ignore = Path var/?* ignore = Path var/.?* ignorenot = Path var/generation ignore = Path pub/media ignore = Path pub/static","title":"Unison profile"},{"location":"magento2/#create-magento-project","text":"cd ~/public_html # create project based on the latest magento version composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition m23x # create project based on specific magento version # composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.2.7 m22x","title":"Create Magento Project"},{"location":"magento2/#upgrade-magento-project","text":"cp composer.json composer.json.bak composer require magento/product-community-edition 2.2.7 --no-update composer update php bin/magento setup:upgrade","title":"Upgrade Magento Project"},{"location":"magento2/#create-module-package","text":"For Marketplace: git clone https://git.example.com/Vendor_Module.git cd Vendor_Module zip -r9 \"vendor-module-1.0.0.zip\" . -x *.git* *.idea* Alternative way (archive will have a path app/code/Vendor/Module/): zip -r9 \"vendor-module-1.0.0.zip\" app/code/Vendor/Module/ -x *.git*","title":"Create module package"},{"location":"magento2/#configuration","text":"","title":"Configuration"},{"location":"magento2/#disable-timestamp-in-static-paths-like-pubstatic12345993943somejs","text":"via Magento Admin: Stores Configuration Advanced Developer Static Files Settings Sign Static Files No via SQL query: INSERT INTO core_config_data (`path`, `value`) VALUES (\"dev/static/sign\", 0) ON DUPLICATE KEY UPDATE `value`=0 cli command:","title":"Disable timestamp in static paths like pub/static12345993943/some.js"},{"location":"magento2/#layout","text":"","title":"Layout"},{"location":"magento2/#add-block-with-html-content","text":"referenceContainer name=\"content\" block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\" arguments argument translate=\"true\" name=\"text\" xsi:type=\"string\" Lorem ipsum dolor ... /argument /arguments /block /referenceContainer","title":"Add block with html content"},{"location":"magento2/#add-content-block-by-id","text":"referenceContainer name=\"content\" block class=\"Magento\\Cms\\Block\\Block\" name=\"my.content.block\" arguments argument name=\"block_id\" xsi:type=\"string\" my-content-block-id /argument /arguments /block /referenceContainer","title":"Add content block by id"},{"location":"magento2/#add-block-to-page-head-section","text":"referenceBlock name=\"head.additional\" block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\" template=\"Vendor_Module::template.phtml\" / /referenceBlock","title":"Add block to page head section"},{"location":"magento2/#javascript","text":"","title":"Javascript"},{"location":"magento2/#show-all-ui-components-on-the-page","text":"require('uiRegistry').get(function(item) { console.log(item.name, item); });","title":"Show all UI components on the page"},{"location":"magento2/#add-administrator","text":"php bin/magento admin:user:create --admin-user=admin --admin-password=password --admin-email=support@example.com --admin-firstname=Support --admin-lastname=Account","title":"Add administrator"},{"location":"mkdocs/","text":"Installation Proceed with https://www.mkdocs.org/#installation Install theme pip install mkdocs-material Make sure there is PATH to mkdocs export PATH=\"$HOME/.local/bin:$PATH\"","title":"Installation"},{"location":"mkdocs/#installation","text":"Proceed with https://www.mkdocs.org/#installation Install theme pip install mkdocs-material Make sure there is PATH to mkdocs export PATH=\"$HOME/.local/bin:$PATH\"","title":"Installation"},{"location":"mysql/","text":"Store mysql user name and password To use mysql and mysqldump commands without password just store credentials in ~/.my.cnf file, e.g.: [client] user=\"devuser\" password=\"devpassword\" Dump database w/o DEFINER dbName='dbname' mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' $dbName.sql Calculate database size SELECT table_schema AS \"Database\", ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS \"Size (MB)\" FROM information_schema.TABLES GROUP BY table_schema; Locking if get_lock(lock_name, 1) then -- LOCKING ok, proceed set @0 = release_lock(lock_name); else -- LOCKING failed, handle this end if;","title":"Mysql"},{"location":"mysql/#store-mysql-user-name-and-password","text":"To use mysql and mysqldump commands without password just store credentials in ~/.my.cnf file, e.g.: [client] user=\"devuser\" password=\"devpassword\"","title":"Store mysql user name and password"},{"location":"mysql/#dump-database-wo-definer","text":"dbName='dbname' mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' $dbName.sql","title":"Dump database w/o DEFINER"},{"location":"mysql/#calculate-database-size","text":"SELECT table_schema AS \"Database\", ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS \"Size (MB)\" FROM information_schema.TABLES GROUP BY table_schema;","title":"Calculate database size"},{"location":"mysql/#locking","text":"if get_lock(lock_name, 1) then -- LOCKING ok, proceed set @0 = release_lock(lock_name); else -- LOCKING failed, handle this end if;","title":"Locking"},{"location":"network/","text":"Get my IP Address ifconfig eth1 | awk '/inet addr/{print substr($2,6)}' OpenWRT Speed test with iperf3 # iperf3 -c ping.online.net -u -b 1G Connecting to host ping.online.net, port 5201 [ 5] local xxx.xxx.xxx.xxx port 46361 connected to 62.210.18.40 port 5201 [ ID] Interval Transfer Bitrate Total Datagrams [ 5] 0.00-1.00 sec 114 MBytes 956 Mbits/sec 82519 [ 5] 1.00-2.00 sec 111 MBytes 931 Mbits/sec 80335 [ 5] 2.00-3.00 sec 108 MBytes 909 Mbits/sec 78439 [ 5] 3.00-4.00 sec 109 MBytes 918 Mbits/sec 79250 [ 5] 4.00-5.00 sec 109 MBytes 914 Mbits/sec 78939 [ 5] 5.00-6.00 sec 109 MBytes 917 Mbits/sec 79203 [ 5] 6.00-7.00 sec 111 MBytes 930 Mbits/sec 80253 [ 5] 7.00-8.00 sec 110 MBytes 924 Mbits/sec 79802 [ 5] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 79676 [ 5] 9.00-10.00 sec 111 MBytes 931 Mbits/sec 80381 - - - - - - - - - - - - - - - - - - - - - - - - - [ ID] Interval Transfer Bitrate Jitter Lost/Total Datagrams [ 5] 0.00-10.00 sec 1.08 GBytes 925 Mbits/sec 0.000 ms 0/798797 (0%) sender [ 5] 0.00-10.00 sec 114 MBytes 95.7 Mbits/sec 0.009 ms 716162/798783 (90%) receiver iperf Done. Results interpretation iperf3 servers Set up Dropbear public key authentication ssh-copy-id root@192.168.1.1 ssh root@192.168.1.1 cp /root/.ssh/authorized_keys /etc/dropbear/ chmod 700 /etc/dropbear chmod 600 /etc/dropbear/authorized_keys IP Addresses daily log (cron job) 0 4 * * * echo `date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}') /root/ip.log","title":"Network"},{"location":"network/#get-my-ip-address","text":"ifconfig eth1 | awk '/inet addr/{print substr($2,6)}'","title":"Get my IP Address"},{"location":"network/#openwrt","text":"","title":"OpenWRT"},{"location":"network/#speed-test-with-iperf3","text":"# iperf3 -c ping.online.net -u -b 1G Connecting to host ping.online.net, port 5201 [ 5] local xxx.xxx.xxx.xxx port 46361 connected to 62.210.18.40 port 5201 [ ID] Interval Transfer Bitrate Total Datagrams [ 5] 0.00-1.00 sec 114 MBytes 956 Mbits/sec 82519 [ 5] 1.00-2.00 sec 111 MBytes 931 Mbits/sec 80335 [ 5] 2.00-3.00 sec 108 MBytes 909 Mbits/sec 78439 [ 5] 3.00-4.00 sec 109 MBytes 918 Mbits/sec 79250 [ 5] 4.00-5.00 sec 109 MBytes 914 Mbits/sec 78939 [ 5] 5.00-6.00 sec 109 MBytes 917 Mbits/sec 79203 [ 5] 6.00-7.00 sec 111 MBytes 930 Mbits/sec 80253 [ 5] 7.00-8.00 sec 110 MBytes 924 Mbits/sec 79802 [ 5] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 79676 [ 5] 9.00-10.00 sec 111 MBytes 931 Mbits/sec 80381 - - - - - - - - - - - - - - - - - - - - - - - - - [ ID] Interval Transfer Bitrate Jitter Lost/Total Datagrams [ 5] 0.00-10.00 sec 1.08 GBytes 925 Mbits/sec 0.000 ms 0/798797 (0%) sender [ 5] 0.00-10.00 sec 114 MBytes 95.7 Mbits/sec 0.009 ms 716162/798783 (90%) receiver iperf Done. Results interpretation iperf3 servers","title":"Speed test with iperf3"},{"location":"network/#set-up-dropbear-public-key-authentication","text":"ssh-copy-id root@192.168.1.1 ssh root@192.168.1.1 cp /root/.ssh/authorized_keys /etc/dropbear/ chmod 700 /etc/dropbear chmod 600 /etc/dropbear/authorized_keys","title":"Set up Dropbear public key authentication"},{"location":"network/#ip-addresses-daily-log-cron-job","text":"0 4 * * * echo `date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}') /root/ip.log","title":"IP Addresses daily log (cron job)"},{"location":"oh-my-git/","text":"Installation Checkout oh-my-git and switch to the \"theme\" branch sudo su - cd /opt git clone https://github.com/yutv/oh-my-git cd oh-my-git git checkout theme exit Add the following lines into your ~/.bashrc declare -A OMG_THEME=([\"right_side_bg\"]='green') source /opt/oh-my-git/prompt.sh Install FontAwesome cd /tmp git clone http://github.com/gabrielelana/awesome-terminal-fonts cd awesome-terminal-fonts git checkout patching-strategy mkdir -p ~/.fonts cp patched/*.ttf ~/.fonts # update the font-info cache sudo fc-cache -fv ~/.fonts rm -Rf /tmp/awesome-terminal-fonts Change the Monospace font in Gnome Tweaks Gnome Tweaks Fonts Monospace = Driod Sans Mono Awesome Regular 11 Now try to change directory to a git repo and you will see a git info bar, e.g.:","title":"Installation"},{"location":"oh-my-git/#installation","text":"Checkout oh-my-git and switch to the \"theme\" branch sudo su - cd /opt git clone https://github.com/yutv/oh-my-git cd oh-my-git git checkout theme exit Add the following lines into your ~/.bashrc declare -A OMG_THEME=([\"right_side_bg\"]='green') source /opt/oh-my-git/prompt.sh Install FontAwesome cd /tmp git clone http://github.com/gabrielelana/awesome-terminal-fonts cd awesome-terminal-fonts git checkout patching-strategy mkdir -p ~/.fonts cp patched/*.ttf ~/.fonts # update the font-info cache sudo fc-cache -fv ~/.fonts rm -Rf /tmp/awesome-terminal-fonts Change the Monospace font in Gnome Tweaks Gnome Tweaks Fonts Monospace = Driod Sans Mono Awesome Regular 11 Now try to change directory to a git repo and you will see a git info bar, e.g.:","title":"Installation"},{"location":"php/","text":"Useful links Accessing private properties in PHP","title":"Php"},{"location":"php/#useful-links","text":"Accessing private properties in PHP","title":"Useful links"},{"location":"ssh/","text":"Separate ssh key for a specific host vi ~/.ssh/config Host github.com IdentityFile ~/.ssh/github_id_rsa.pub","title":"Ssh"},{"location":"ssh/#separate-ssh-key-for-a-specific-host","text":"vi ~/.ssh/config Host github.com IdentityFile ~/.ssh/github_id_rsa.pub","title":"Separate ssh key for a specific host"},{"location":"system/","text":"Info #system info in short format inxi -F Disable Selinu #runtime sudo setenforce 0 #permanently /etc/selinux/config SELINUX=disabled","title":"System"},{"location":"system/#info","text":"#system info in short format inxi -F","title":"Info"},{"location":"system/#disable-selinu","text":"#runtime sudo setenforce 0 #permanently /etc/selinux/config SELINUX=disabled","title":"Disable Selinu"}]}