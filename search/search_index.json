{
    "docs": [
        {
            "location": "/", 
            "text": "Set of useful tips for developers who are using bash, git, mysql, etc.\n\n\nMkdocs\n\n\n\n\npip install mkdocs\n - install mkdocs (\nmore info\n)\n\n\npip install mkdocs-material\n -  install material theme (\nmore info\n)\n\n\nmkdocs serve\n - start HTTP server\n\n\nmkdocs gh-deploy\n - deploy to github pages\n\n\nMarkdown Cheatsheet", 
            "title": "Home"
        }, 
        {
            "location": "/#mkdocs", 
            "text": "pip install mkdocs  - install mkdocs ( more info )  pip install mkdocs-material  -  install material theme ( more info )  mkdocs serve  - start HTTP server  mkdocs gh-deploy  - deploy to github pages  Markdown Cheatsheet", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/bash/", 
            "text": "path info\n\n\nFILE=\"/home/user/file.php\"\necho \"${FILE##*.}\"    # php\necho ${FILE##*/}      # file.php\n${FILE%/*}            # /home/user\n\n\n\nSSH authentication w/o password\n\n\ncd ~/.ssh\nssh-keygen\nssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com\nssh-add\nssh remote.host.com\n\n\n\n\nIf username has a \u201c@\u201d symbol then use the following:\n\n\nssh -l user@example.com example.com\nmkdir .ssh\ntouch .ssh/authorized_keys\nexit\ncat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat \n .ssh/authorized_keys'\nchmod 700 .ssh\nchmod 400 .ssh/authorized_keys\nssh -l user@example.com example.com\n\n\n\n\nBash prompt w/ path and colors\n\n\nAdd the following line to your \n~/.bash_profile\n:\n\n\nGreen\n\n\nexport PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"\n\n\n\nRemote (yellow)\n\n\nexport PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"\n\n\n\nRemote Root (red and yellow)\n\n\nexport PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"\n\n\n\nShow colors:\n\n\nfor i in {0..255}; do echo -e \n\\e[38;05;${i}m${i}\n; done | column -c 80 -s '  '; echo -e \n\\e[m\n\n\n\n\n\nfor code in $(seq -w 0 255); do for attr in 0 1; do printf \n%s-%03s %bTest%b\\n\n \n${attr}\n \n${code}\n \n\\e[${attr};38;05;${code}m\n \n\\e[m\n; done; done | column -c $((COLUMNS*2))\n\n\n\n\nAliases\n\n\n#general\nalias ll='LC_COLLATE=C ls -la --color=auto'\n\n#svn\nalias ssie='svn st --ignore-externals | grep ^[^xX]'\nalias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -'\n\n\n\nVIM\n\n\n~/.vimrc\n\n\nset nocompatible\nset backspace=2\nset tabstop=4\nset expandtab\n\n\n\nLoad additional php.ini when run php from terminal\n\n\n\n\n\n\nAdd the following line into \n~/.bashrc\n file:\n\n\nexport PHP_INI_SCAN_DIR=\":$HOME/etc/php70\"\n\n\n\n\n\n\nPut additional config into \n~/etc/php70/php.ini\n, e.g:\n\n\nmemory_limit = -1\n\n\n\n\n\n\nRun the command #1 or re-login terminal \n\n\n\n\n\n\nCheck ini paths:\n\n\nphp --ini\n\n\n\n\n\n\nCheck memory limit:\n\n\n$ php -i | grep memory_limit\nmemory_limit =\n -1 =\n -1\n\n\n\n\n\n\n\nMore info on php.net\n\n\nConvert DOS to Unix newlines in current directory excluding .git directory\n\n\nfind . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix\n\n\n\nUse custom SSH port with rsync/ssh/scp/sshfs\n\n\nrsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ .\nssh user@server.com -p 2244\nscp -P 2244 user@server.com:/html/website_db.sql .\nsshfs user@server.com:/html -p 2244 server.com\n\n\n\nUpload multiple files w/o file name duplication\n\n\nscp {,user@example.com:~/}public_html/index.php\nscp {,user@example.com:~/}public_html/.htaccess\nscp {,user@example.com:~/}public_html/images/logo.png\nscp {,user@example.com:~/}public_html/js/jquery.js\n\n\n\nFIX permissions\n\n\nfind . -type f -exec chmod 640 {} \\;\nfind . -type d -exec chmod 750 {} \\;\n\n\n\nUseful links\n\n\n\n\nHow to parse command line arguments\n\n\n\n\nStatistics\n\n\nFind # of code lines in directory\n\n\n(find . -type f -name '*.php' -print0 | xargs -0 cat) | wc -l", 
            "title": "Bash"
        }, 
        {
            "location": "/bash/#path-info", 
            "text": "FILE=\"/home/user/file.php\"\necho \"${FILE##*.}\"    # php\necho ${FILE##*/}      # file.php\n${FILE%/*}            # /home/user", 
            "title": "path info"
        }, 
        {
            "location": "/bash/#ssh-authentication-wo-password", 
            "text": "cd ~/.ssh\nssh-keygen\nssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com\nssh-add\nssh remote.host.com  If username has a \u201c@\u201d symbol then use the following:  ssh -l user@example.com example.com\nmkdir .ssh\ntouch .ssh/authorized_keys\nexit\ncat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat   .ssh/authorized_keys'\nchmod 700 .ssh\nchmod 400 .ssh/authorized_keys\nssh -l user@example.com example.com", 
            "title": "SSH authentication w/o password"
        }, 
        {
            "location": "/bash/#bash-prompt-w-path-and-colors", 
            "text": "Add the following line to your  ~/.bash_profile :  Green  export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"  Remote (yellow)  export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"  Remote Root (red and yellow)  export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\"  Show colors:  for i in {0..255}; do echo -e  \\e[38;05;${i}m${i} ; done | column -c 80 -s '  '; echo -e  \\e[m   for code in $(seq -w 0 255); do for attr in 0 1; do printf  %s-%03s %bTest%b\\n   ${attr}   ${code}   \\e[${attr};38;05;${code}m   \\e[m ; done; done | column -c $((COLUMNS*2))", 
            "title": "Bash prompt w/ path and colors"
        }, 
        {
            "location": "/bash/#aliases", 
            "text": "#general\nalias ll='LC_COLLATE=C ls -la --color=auto'\n\n#svn\nalias ssie='svn st --ignore-externals | grep ^[^xX]'\nalias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -'", 
            "title": "Aliases"
        }, 
        {
            "location": "/bash/#vim", 
            "text": "~/.vimrc  set nocompatible\nset backspace=2\nset tabstop=4\nset expandtab", 
            "title": "VIM"
        }, 
        {
            "location": "/bash/#load-additional-phpini-when-run-php-from-terminal", 
            "text": "Add the following line into  ~/.bashrc  file:  export PHP_INI_SCAN_DIR=\":$HOME/etc/php70\"    Put additional config into  ~/etc/php70/php.ini , e.g:  memory_limit = -1    Run the command #1 or re-login terminal     Check ini paths:  php --ini    Check memory limit:  $ php -i | grep memory_limit\nmemory_limit =  -1 =  -1    More info on php.net", 
            "title": "Load additional php.ini when run php from terminal"
        }, 
        {
            "location": "/bash/#convert-dos-to-unix-newlines-in-current-directory-excluding-git-directory", 
            "text": "find . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix", 
            "title": "Convert DOS to Unix newlines in current directory excluding .git directory"
        }, 
        {
            "location": "/bash/#use-custom-ssh-port-with-rsyncsshscpsshfs", 
            "text": "rsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ .\nssh user@server.com -p 2244\nscp -P 2244 user@server.com:/html/website_db.sql .\nsshfs user@server.com:/html -p 2244 server.com", 
            "title": "Use custom SSH port with rsync/ssh/scp/sshfs"
        }, 
        {
            "location": "/bash/#upload-multiple-files-wo-file-name-duplication", 
            "text": "scp {,user@example.com:~/}public_html/index.php\nscp {,user@example.com:~/}public_html/.htaccess\nscp {,user@example.com:~/}public_html/images/logo.png\nscp {,user@example.com:~/}public_html/js/jquery.js", 
            "title": "Upload multiple files w/o file name duplication"
        }, 
        {
            "location": "/bash/#fix-permissions", 
            "text": "find . -type f -exec chmod 640 {} \\;\nfind . -type d -exec chmod 750 {} \\;", 
            "title": "FIX permissions"
        }, 
        {
            "location": "/bash/#useful-links", 
            "text": "How to parse command line arguments", 
            "title": "Useful links"
        }, 
        {
            "location": "/bash/#statistics", 
            "text": "", 
            "title": "Statistics"
        }, 
        {
            "location": "/bash/#find-of-code-lines-in-directory", 
            "text": "(find . -type f -name '*.php' -print0 | xargs -0 cat) | wc -l", 
            "title": "Find # of code lines in directory"
        }, 
        {
            "location": "/composer/", 
            "text": "Add a custom packages repository\n\n\ncomposer config --global repositories.example composer https://packages.example.com/\n\n\n\nInstall composer package from a local folder\n\n\nmkdir -p ~/composer-packages/\ncp vendor-module-x.x.x.zip ~/composer-packages/\ncd ~/public_html/\ncomposer config repositories.local artifact ~/composer-packages/\ncomposer require vendor/module\n#or\ncomposer update vendor/module", 
            "title": "Composer"
        }, 
        {
            "location": "/composer/#add-a-custom-packages-repository", 
            "text": "composer config --global repositories.example composer https://packages.example.com/", 
            "title": "Add a custom packages repository"
        }, 
        {
            "location": "/composer/#install-composer-package-from-a-local-folder", 
            "text": "mkdir -p ~/composer-packages/\ncp vendor-module-x.x.x.zip ~/composer-packages/\ncd ~/public_html/\ncomposer config repositories.local artifact ~/composer-packages/\ncomposer require vendor/module\n#or\ncomposer update vendor/module", 
            "title": "Install composer package from a local folder"
        }, 
        {
            "location": "/disk/", 
            "text": "write iso to disk\n\n\n    dd if=os.img of=/dev/sdX bs=1M status=progress oflag=dsync\n\n\n\n\nwhere\n- oflag=dsync - synchronize I/O for data.\n\n\nRAM disk\n\n\nsudo mount -o size=2G -t tmpfs none my.project.com", 
            "title": "Disk"
        }, 
        {
            "location": "/disk/#write-iso-to-disk", 
            "text": "dd if=os.img of=/dev/sdX bs=1M status=progress oflag=dsync  where\n- oflag=dsync - synchronize I/O for data.", 
            "title": "write iso to disk"
        }, 
        {
            "location": "/disk/#ram-disk", 
            "text": "sudo mount -o size=2G -t tmpfs none my.project.com", 
            "title": "RAM disk"
        }, 
        {
            "location": "/git/", 
            "text": "Daily Routine\n\n\nUpdate local list of remote branches\n\n\ngit branch -a\ngit remote update origin --prune\n\n\n\n\nAdding a remote\n\n\ngit remote -v\ngit remote add origin https://domain.com/myrepo.git\n\n\n\n\nMerge branch as new commit\n\n\ngit merge --squash branch_name\ngit commit\n\n\n\n\nSetup\n\n\nGlobal .gitignore\n\n\ngit config --global core.excludesfile ~/.gitignore\nvi ~/.gitignore\n\n\n\n\nAdd your global ignores, e.g:\n\n\n.idea\nvendor\nstudio\n.sass-cache\n.unison*\n\n\n\nStore passwords\n\n\ngit config --global credential.helper store\n\n\n\n\nWorkaround with 403 error\n\n\ngit config --global --unset-all credential.helper\ngit config --unset-all credential.helper\n\n\n\n\ngit lg\n\n\ngit config --global alias.lg \"log --all --color --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)\n%an\n%Creset %C(yellow)%d%Creset' --abbrev-commit\"", 
            "title": "Git"
        }, 
        {
            "location": "/git/#daily-routine", 
            "text": "", 
            "title": "Daily Routine"
        }, 
        {
            "location": "/git/#update-local-list-of-remote-branches", 
            "text": "git branch -a\ngit remote update origin --prune", 
            "title": "Update local list of remote branches"
        }, 
        {
            "location": "/git/#adding-a-remote", 
            "text": "git remote -v\ngit remote add origin https://domain.com/myrepo.git", 
            "title": "Adding a remote"
        }, 
        {
            "location": "/git/#merge-branch-as-new-commit", 
            "text": "git merge --squash branch_name\ngit commit", 
            "title": "Merge branch as new commit"
        }, 
        {
            "location": "/git/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/git/#global-gitignore", 
            "text": "git config --global core.excludesfile ~/.gitignore\nvi ~/.gitignore  Add your global ignores, e.g:  .idea\nvendor\nstudio\n.sass-cache\n.unison*", 
            "title": "Global .gitignore"
        }, 
        {
            "location": "/git/#store-passwords", 
            "text": "git config --global credential.helper store", 
            "title": "Store passwords"
        }, 
        {
            "location": "/git/#workaround-with-403-error", 
            "text": "git config --global --unset-all credential.helper\ngit config --unset-all credential.helper", 
            "title": "Workaround with 403 error"
        }, 
        {
            "location": "/git/#git-lg", 
            "text": "git config --global alias.lg \"log --all --color --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue) %an %Creset %C(yellow)%d%Creset' --abbrev-commit\"", 
            "title": "git lg"
        }, 
        {
            "location": "/htaccess/", 
            "text": "Disable Browser Cache for specific folder\n\n\nPlace the following line into .htaccess:\n\n\nHeader set Cache-Control \"no-store\" \"expr=%{REQUEST_URI}=~/(VendorName1|VendorName2|requirejs-config\\.js)/i\"\n\n\n\nAs result url with \"VendorName\" in path will get \nPragma \"no-cache\"\n http header, so browser won't cache it.\nThis trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only.  \n\n\nBasic Auth with URL exception\n\n\nAccess \n/dir/subdir/file.txt\n file without authorization\n\n\nSetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth\nAuthType Basic\nAuthUserFile /home/user/public_html/.htpasswd\nAuthName \"Restricted Area\"\nRequire valid-user\nOrder allow,deny\nAllow from env=no_auth\nSatisfy any\n\n\n\nDefine base path as environment variable for further usage\n\n\nRewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$\nRewriteRule ^(.*) - [E=BASE:%1]\nRewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]", 
            "title": "Htaccess"
        }, 
        {
            "location": "/htaccess/#disable-browser-cache-for-specific-folder", 
            "text": "Place the following line into .htaccess:  Header set Cache-Control \"no-store\" \"expr=%{REQUEST_URI}=~/(VendorName1|VendorName2|requirejs-config\\.js)/i\"  As result url with \"VendorName\" in path will get  Pragma \"no-cache\"  http header, so browser won't cache it.\nThis trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only.", 
            "title": "Disable Browser Cache for specific folder"
        }, 
        {
            "location": "/htaccess/#basic-auth-with-url-exception", 
            "text": "Access  /dir/subdir/file.txt  file without authorization  SetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth\nAuthType Basic\nAuthUserFile /home/user/public_html/.htpasswd\nAuthName \"Restricted Area\"\nRequire valid-user\nOrder allow,deny\nAllow from env=no_auth\nSatisfy any", 
            "title": "Basic Auth with URL exception"
        }, 
        {
            "location": "/htaccess/#define-base-path-as-environment-variable-for-further-usage", 
            "text": "RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$\nRewriteRule ^(.*) - [E=BASE:%1]\nRewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]", 
            "title": "Define base path as environment variable for further usage"
        }, 
        {
            "location": "/http2/", 
            "text": "Check HTTP2 support\n\n\ncurl --http2 -vI https://http1.golang.org/ 2\n1 | grep ALPN\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* ALPN, server did not agree to a protocol\n\ncurl --http2 -vI https://http2.golang.org/ 2\n1 | grep ALPN\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* ALPN, server accepted to use h2\n\n\n\nhttpd.conf\n\n\nProtocols h2 http/1.1", 
            "title": "Http2"
        }, 
        {
            "location": "/http2/#check-http2-support", 
            "text": "curl --http2 -vI https://http1.golang.org/ 2 1 | grep ALPN\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* ALPN, server did not agree to a protocol\n\ncurl --http2 -vI https://http2.golang.org/ 2 1 | grep ALPN\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* ALPN, server accepted to use h2", 
            "title": "Check HTTP2 support"
        }, 
        {
            "location": "/http2/#httpdconf", 
            "text": "Protocols h2 http/1.1", 
            "title": "httpd.conf"
        }, 
        {
            "location": "/magento1/", 
            "text": "Setup Dynamic Base URL\n\n\nINSERT INTO core_config_data (`path`, `value`) VALUES\n('web/url/use_store',  1), \n('web/unsecure/base_url',  '{{base_url}}'), \n('web/secure/base_url', '{{base_url}}'),\n('web/unsecure/base_link_url', '{{unsecure_base_url}}'),\n('web/unsecure/base_skin_url', '{{unsecure_base_url}}skin/'),\n('web/unsecure/base_media_url', '{{unsecure_base_url}}media/'),\n('web/unsecure/base_js_url', '{{unsecure_base_url}}js/'),\n('web/secure/base_link_url', '{{secure_base_url}}'),\n('web/secure/base_skin_url', '{{secure_base_url}}skin/'),\n('web/secure/base_media_url', '{{secure_base_url}}media/'),\n('web/secure/base_js_url', '{{secure_base_url}}js/')\nON DUPLICATE KEY UPDATE `value` = VALUES(`value`);\n\n\n\n\nCLI clear cache\n\n\nphp -r 'require \"app/Mage.php\"; Mage::app()-\ngetCacheInstance()-\nflush();'\n\n\n\nUnison profile\n\n\n~/.unison/magento1.prf\n\n\ninclude default\nignore = Path var/?*\nignore = Path var/.?*\nignore = Path media\n\n\n\nforce secure urls\n\n\napp/etc/local.xml\n\n\n?xml version=\"1.0\"?\n\n\nconfig\n\n  \nfrontend\n\n    \nsecure_url\n\n      \nall\n/\n/all\n\n    \n/secure_url\n\n  \n/frontend\n\n\n/config", 
            "title": "Magento1"
        }, 
        {
            "location": "/magento1/#setup-dynamic-base-url", 
            "text": "INSERT INTO core_config_data (`path`, `value`) VALUES\n('web/url/use_store',  1), \n('web/unsecure/base_url',  '{{base_url}}'), \n('web/secure/base_url', '{{base_url}}'),\n('web/unsecure/base_link_url', '{{unsecure_base_url}}'),\n('web/unsecure/base_skin_url', '{{unsecure_base_url}}skin/'),\n('web/unsecure/base_media_url', '{{unsecure_base_url}}media/'),\n('web/unsecure/base_js_url', '{{unsecure_base_url}}js/'),\n('web/secure/base_link_url', '{{secure_base_url}}'),\n('web/secure/base_skin_url', '{{secure_base_url}}skin/'),\n('web/secure/base_media_url', '{{secure_base_url}}media/'),\n('web/secure/base_js_url', '{{secure_base_url}}js/')\nON DUPLICATE KEY UPDATE `value` = VALUES(`value`);", 
            "title": "Setup Dynamic Base URL"
        }, 
        {
            "location": "/magento1/#cli-clear-cache", 
            "text": "php -r 'require \"app/Mage.php\"; Mage::app()- getCacheInstance()- flush();'", 
            "title": "CLI clear cache"
        }, 
        {
            "location": "/magento1/#unison-profile", 
            "text": "~/.unison/magento1.prf  include default\nignore = Path var/?*\nignore = Path var/.?*\nignore = Path media", 
            "title": "Unison profile"
        }, 
        {
            "location": "/magento1/#force-secure-urls", 
            "text": "app/etc/local.xml  ?xml version=\"1.0\"?  config \n   frontend \n     secure_url \n       all / /all \n     /secure_url \n   /frontend  /config", 
            "title": "force secure urls"
        }, 
        {
            "location": "/magento2/", 
            "text": "PhpStorm\n\n\nphp bin/magento dev:urn-catalog:generate .idea/misc.xml\n\n\n\nUnison profile\n\n\n~/.unison/magento2.prf\n\n\ninclude default\nignore = Path var/?*\nignore = Path var/.?*\nignorenot = Path var/generation\nignore = Path pub/media\nignore = Path pub/static\n\n\n\nCreate Magento Project\n\n\ncd ~/public_html\n# create project based on the latest magento version\ncomposer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition m23x\n\n# create project based on specific magento version\n# composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.2.7 m22x\n\n\n\nUpgrade Magento Project\n\n\ncp composer.json composer.json.bak\ncomposer require magento/product-community-edition 2.2.7 --no-update\ncomposer update\nphp bin/magento setup:upgrade\n\n\n\nCreate module package\n\n\nFor Marketplace:\n\n\ngit clone https://git.example.com/Vendor_Module.git\ncd Vendor_Module\nzip -r9 \"vendor-module-1.0.0.zip\" . -x *.git* *.idea*\n\n\n\nAlternative way (archive will have a path app/code/Vendor/Module/):\n\n\nzip -r9 \"vendor-module-1.0.0.zip\" app/code/Vendor/Module/ -x *.git*\n\n\n\nLayout\n\n\nAdd block with html content\n\n\nreferenceContainer name=\"content\"\n\n    \nblock class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\"\n\n        \narguments\n\n            \nargument translate=\"true\" name=\"text\" xsi:type=\"string\"\n\n                Lorem ipsum dolor ...\n            \n/argument\n\n        \n/arguments\n\n    \n/block\n\n\n/referenceContainer\n\n\n\n\nAdd content block by id\n\n\nreferenceContainer name=\"content\"\n\n    \nblock class=\"Magento\\Cms\\Block\\Block\" name=\"my.content.block\"\n\n        \narguments\n\n            \nargument name=\"block_id\" xsi:type=\"string\"\nmy-content-block-id\n/argument\n\n        \n/arguments\n\n    \n/block\n\n\n/referenceContainer\n\n\n\n\nAdd block to page head section\n\n\nreferenceBlock name=\"head.additional\"\n\n    \nblock class=\"Magento\\Framework\\View\\Element\\Text\" \n           name=\"my.block.name\" \n           template=\"Vendor_Module::template.phtml\" /\n\n\n/referenceBlock\n\n\n\n\nJavascript\n\n\nShow all UI components on the page\n\n\nrequire('uiRegistry').get(function(item) { console.log(item.name, item); });\n\n\n\nAdd administrator\n\n\nphp bin/magento admin:user:create --admin-user=admin --admin-password=password --admin-email=support@example.com --admin-firstname=Support --admin-lastname=Account", 
            "title": "Magento2"
        }, 
        {
            "location": "/magento2/#phpstorm", 
            "text": "php bin/magento dev:urn-catalog:generate .idea/misc.xml", 
            "title": "PhpStorm"
        }, 
        {
            "location": "/magento2/#unison-profile", 
            "text": "~/.unison/magento2.prf  include default\nignore = Path var/?*\nignore = Path var/.?*\nignorenot = Path var/generation\nignore = Path pub/media\nignore = Path pub/static", 
            "title": "Unison profile"
        }, 
        {
            "location": "/magento2/#create-magento-project", 
            "text": "cd ~/public_html\n# create project based on the latest magento version\ncomposer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition m23x\n\n# create project based on specific magento version\n# composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.2.7 m22x", 
            "title": "Create Magento Project"
        }, 
        {
            "location": "/magento2/#upgrade-magento-project", 
            "text": "cp composer.json composer.json.bak\ncomposer require magento/product-community-edition 2.2.7 --no-update\ncomposer update\nphp bin/magento setup:upgrade", 
            "title": "Upgrade Magento Project"
        }, 
        {
            "location": "/magento2/#create-module-package", 
            "text": "For Marketplace:  git clone https://git.example.com/Vendor_Module.git\ncd Vendor_Module\nzip -r9 \"vendor-module-1.0.0.zip\" . -x *.git* *.idea*  Alternative way (archive will have a path app/code/Vendor/Module/):  zip -r9 \"vendor-module-1.0.0.zip\" app/code/Vendor/Module/ -x *.git*", 
            "title": "Create module package"
        }, 
        {
            "location": "/magento2/#layout", 
            "text": "", 
            "title": "Layout"
        }, 
        {
            "location": "/magento2/#add-block-with-html-content", 
            "text": "referenceContainer name=\"content\" \n     block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"my.block.name\" \n         arguments \n             argument translate=\"true\" name=\"text\" xsi:type=\"string\" \n                Lorem ipsum dolor ...\n             /argument \n         /arguments \n     /block  /referenceContainer", 
            "title": "Add block with html content"
        }, 
        {
            "location": "/magento2/#add-content-block-by-id", 
            "text": "referenceContainer name=\"content\" \n     block class=\"Magento\\Cms\\Block\\Block\" name=\"my.content.block\" \n         arguments \n             argument name=\"block_id\" xsi:type=\"string\" my-content-block-id /argument \n         /arguments \n     /block  /referenceContainer", 
            "title": "Add content block by id"
        }, 
        {
            "location": "/magento2/#add-block-to-page-head-section", 
            "text": "referenceBlock name=\"head.additional\" \n     block class=\"Magento\\Framework\\View\\Element\\Text\" \n           name=\"my.block.name\" \n           template=\"Vendor_Module::template.phtml\" /  /referenceBlock", 
            "title": "Add block to page head section"
        }, 
        {
            "location": "/magento2/#javascript", 
            "text": "", 
            "title": "Javascript"
        }, 
        {
            "location": "/magento2/#show-all-ui-components-on-the-page", 
            "text": "require('uiRegistry').get(function(item) { console.log(item.name, item); });", 
            "title": "Show all UI components on the page"
        }, 
        {
            "location": "/magento2/#add-administrator", 
            "text": "php bin/magento admin:user:create --admin-user=admin --admin-password=password --admin-email=support@example.com --admin-firstname=Support --admin-lastname=Account", 
            "title": "Add administrator"
        }, 
        {
            "location": "/mysql/", 
            "text": "Store mysql user name and password\n\n\nTo use \nmysql\n and \nmysqldump\n commands without password just store credentials in \n~/.my.cnf\n file, e.g.:\n\n\n[client]\nuser=\"devuser\"\npassword=\"devpassword\"\n\n\n\nDump database w/o DEFINER\n\n\ndbName='dbname' \n mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' \n $dbName.sql\n\n\n\nCalculate database size\n\n\nSELECT table_schema AS \"Database\", \nROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS \"Size (MB)\" \nFROM information_schema.TABLES \nGROUP BY table_schema;", 
            "title": "Mysql"
        }, 
        {
            "location": "/mysql/#store-mysql-user-name-and-password", 
            "text": "To use  mysql  and  mysqldump  commands without password just store credentials in  ~/.my.cnf  file, e.g.:  [client]\nuser=\"devuser\"\npassword=\"devpassword\"", 
            "title": "Store mysql user name and password"
        }, 
        {
            "location": "/mysql/#dump-database-wo-definer", 
            "text": "dbName='dbname'   mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/'   $dbName.sql", 
            "title": "Dump database w/o DEFINER"
        }, 
        {
            "location": "/mysql/#calculate-database-size", 
            "text": "SELECT table_schema AS \"Database\", \nROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS \"Size (MB)\" \nFROM information_schema.TABLES \nGROUP BY table_schema;", 
            "title": "Calculate database size"
        }, 
        {
            "location": "/network/", 
            "text": "Get my IP Address\n\n\nifconfig eth1 | awk '/inet addr/{print substr($2,6)}'\n\n\n\n\nOpenWRT\n\n\nSpeed test with iperf3\n\n\n# iperf3 -c ping.online.net -u -b 1G \nConnecting to host ping.online.net, port 5201\n[  5] local xxx.xxx.xxx.xxx port 46361 connected to 62.210.18.40 port 5201\n[ ID] Interval           Transfer     Bitrate         Total Datagrams\n[  5]   0.00-1.00   sec   114 MBytes   956 Mbits/sec  82519  \n[  5]   1.00-2.00   sec   111 MBytes   931 Mbits/sec  80335  \n[  5]   2.00-3.00   sec   108 MBytes   909 Mbits/sec  78439  \n[  5]   3.00-4.00   sec   109 MBytes   918 Mbits/sec  79250  \n[  5]   4.00-5.00   sec   109 MBytes   914 Mbits/sec  78939  \n[  5]   5.00-6.00   sec   109 MBytes   917 Mbits/sec  79203  \n[  5]   6.00-7.00   sec   111 MBytes   930 Mbits/sec  80253  \n[  5]   7.00-8.00   sec   110 MBytes   924 Mbits/sec  79802  \n[  5]   8.00-9.00   sec   110 MBytes   923 Mbits/sec  79676  \n[  5]   9.00-10.00  sec   111 MBytes   931 Mbits/sec  80381  \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Jitter    Lost/Total Datagrams\n[  5]   0.00-10.00  sec  1.08 GBytes   925 Mbits/sec  0.000 ms  0/798797 (0%)  sender\n[  5]   0.00-10.00  sec   114 MBytes  95.7 Mbits/sec  0.009 ms  716162/798783 (90%)  receiver\n\niperf Done.\n\n\n\n\n\n\nResults interpretation\n\n\niperf3 servers\n\n\n\n\nSet up Dropbear public key authentication\n\n\nssh-copy-id  root@192.168.1.1\nssh root@192.168.1.1\ncp /root/.ssh/authorized_keys /etc/dropbear/\nchmod 700 /etc/dropbear\nchmod 600 /etc/dropbear/authorized_keys\n\n\n\n\nIP Addresses daily log (cron job)\n\n\n0 4 * * * echo \n`date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}')\n \n /root/ip.log", 
            "title": "Network"
        }, 
        {
            "location": "/network/#get-my-ip-address", 
            "text": "ifconfig eth1 | awk '/inet addr/{print substr($2,6)}'", 
            "title": "Get my IP Address"
        }, 
        {
            "location": "/network/#openwrt", 
            "text": "", 
            "title": "OpenWRT"
        }, 
        {
            "location": "/network/#speed-test-with-iperf3", 
            "text": "# iperf3 -c ping.online.net -u -b 1G \nConnecting to host ping.online.net, port 5201\n[  5] local xxx.xxx.xxx.xxx port 46361 connected to 62.210.18.40 port 5201\n[ ID] Interval           Transfer     Bitrate         Total Datagrams\n[  5]   0.00-1.00   sec   114 MBytes   956 Mbits/sec  82519  \n[  5]   1.00-2.00   sec   111 MBytes   931 Mbits/sec  80335  \n[  5]   2.00-3.00   sec   108 MBytes   909 Mbits/sec  78439  \n[  5]   3.00-4.00   sec   109 MBytes   918 Mbits/sec  79250  \n[  5]   4.00-5.00   sec   109 MBytes   914 Mbits/sec  78939  \n[  5]   5.00-6.00   sec   109 MBytes   917 Mbits/sec  79203  \n[  5]   6.00-7.00   sec   111 MBytes   930 Mbits/sec  80253  \n[  5]   7.00-8.00   sec   110 MBytes   924 Mbits/sec  79802  \n[  5]   8.00-9.00   sec   110 MBytes   923 Mbits/sec  79676  \n[  5]   9.00-10.00  sec   111 MBytes   931 Mbits/sec  80381  \n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bitrate         Jitter    Lost/Total Datagrams\n[  5]   0.00-10.00  sec  1.08 GBytes   925 Mbits/sec  0.000 ms  0/798797 (0%)  sender\n[  5]   0.00-10.00  sec   114 MBytes  95.7 Mbits/sec  0.009 ms  716162/798783 (90%)  receiver\n\niperf Done.   Results interpretation  iperf3 servers", 
            "title": "Speed test with iperf3"
        }, 
        {
            "location": "/network/#set-up-dropbear-public-key-authentication", 
            "text": "ssh-copy-id  root@192.168.1.1\nssh root@192.168.1.1\ncp /root/.ssh/authorized_keys /etc/dropbear/\nchmod 700 /etc/dropbear\nchmod 600 /etc/dropbear/authorized_keys", 
            "title": "Set up Dropbear public key authentication"
        }, 
        {
            "location": "/network/#ip-addresses-daily-log-cron-job", 
            "text": "0 4 * * * echo  `date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}')    /root/ip.log", 
            "title": "IP Addresses daily log (cron job)"
        }, 
        {
            "location": "/system/", 
            "text": "Info\n\n\n#system info in short format\ninxi -F", 
            "title": "System"
        }, 
        {
            "location": "/system/#info", 
            "text": "#system info in short format\ninxi -F", 
            "title": "Info"
        }
    ]
}