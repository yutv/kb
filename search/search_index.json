{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Set of useful tips for developers who are using bash, git, mysql, etc. Mkdocs pip install mkdocs - install mkdocs ( more info ) pip install mkdocs-material - install material theme ( more info ) mkdocs server - start HTTP server mkdocs gh-deploy - deploy to github pages Markdown Cheatsheet","title":"Home"},{"location":"#mkdocs","text":"pip install mkdocs - install mkdocs ( more info ) pip install mkdocs-material - install material theme ( more info ) mkdocs server - start HTTP server mkdocs gh-deploy - deploy to github pages Markdown Cheatsheet","title":"Mkdocs"},{"location":"bash/","text":"SSH authentication w/o password cd ~/.ssh ssh-keygen ssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com ssh-add ssh remote.host.com If username has a \u201c@\u201d symbol then use the following: ssh -l user@example.com example.com mkdir .ssh touch .ssh/authorized_keys exit cat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat .ssh/authorized_keys' chmod 700 .ssh chmod 400 .ssh/authorized_keys ssh -l user@example.com example.com Bash prompt w/ path and colors Add the following line to your ~/.bash_profile : Green export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote (yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote Root (red and yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Show colors: for i in {0..255}; do echo -e \\e[38;05;${i}m${i} ; done | column -c 80 -s ' '; echo -e \\e[m for code in $(seq -w 0 255); do for attr in 0 1; do printf %s-%03s %bTest%b\\n ${attr} ${code} \\e[${attr};38;05;${code}m \\e[m ; done; done | column -c $((COLUMNS*2)) Aliases #general alias ll='LC_COLLATE=C ls -la --color=auto' #svn alias ssie='svn st --ignore-externals | grep ^[^xX]' alias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -' VIM ~/.vimrc set nocompatible set backspace=2 set tabstop=4 set expandtab Load additional php.ini when run php from terminal ~/.bashrc export PHP_INI_SCAN_DIR=\":$HOME/etc/php70\" php --ini more info on php.net Convert DOS to Unix newlines in current directory excluding .git directory find . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix Use custom SSH port with rsync/ssh/scp/sshfs rsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ . ssh user@server.com -p 2244 scp -P 2244 user@server.com:/html/website_db.sql . sshfs user@server.com:/html -p 2244 server.com Upload multiple files w/o file name duplication scp {,user@example.com:~/}public_html/index.php scp {,user@example.com:~/}public_html/.htaccess scp {,user@example.com:~/}public_html/images/logo.png scp {,user@example.com:~/}public_html/js/jquery.js Useful links How to parse command line arguments","title":"Bash"},{"location":"bash/#ssh-authentication-wo-password","text":"cd ~/.ssh ssh-keygen ssh-copy-id -i ~/.ssh/id_rsa.pub remote.host.com ssh-add ssh remote.host.com If username has a \u201c@\u201d symbol then use the following: ssh -l user@example.com example.com mkdir .ssh touch .ssh/authorized_keys exit cat ~/.ssh/id_rsa.pub | ssh -l user@example.com example.com 'cat .ssh/authorized_keys' chmod 700 .ssh chmod 400 .ssh/authorized_keys ssh -l user@example.com example.com","title":"SSH authentication w/o password"},{"location":"bash/#bash-prompt-w-path-and-colors","text":"Add the following line to your ~/.bash_profile : Green export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;47m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;208m\\]\\h:\\[\\e[0;38;05;111m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote (yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;226m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Remote Root (red and yellow) export PS1=\"\\[\\e[0;38;05;15m\\][\\[\\e[0;38;05;196m\\]\\u\\[\\e[0;38;05;15m\\]@\\[\\e[0;38;05;226m\\]\\h:\\[\\e[0;38;05;180m\\]\\w\\[\\e[0;38;05;15m\\]]\\\\$ \\[\\e[0m\\]\" Show colors: for i in {0..255}; do echo -e \\e[38;05;${i}m${i} ; done | column -c 80 -s ' '; echo -e \\e[m for code in $(seq -w 0 255); do for attr in 0 1; do printf %s-%03s %bTest%b\\n ${attr} ${code} \\e[${attr};38;05;${code}m \\e[m ; done; done | column -c $((COLUMNS*2))","title":"Bash prompt w/ path and colors"},{"location":"bash/#aliases","text":"#general alias ll='LC_COLLATE=C ls -la --color=auto' #svn alias ssie='svn st --ignore-externals | grep ^[^xX]' alias xdiff='svn diff -x \"-w --ignore-eol-style\" | vim -R -'","title":"Aliases"},{"location":"bash/#vim","text":"~/.vimrc set nocompatible set backspace=2 set tabstop=4 set expandtab","title":"VIM"},{"location":"bash/#load-additional-phpini-when-run-php-from-terminal","text":"~/.bashrc export PHP_INI_SCAN_DIR=\":$HOME/etc/php70\" php --ini more info on php.net","title":"Load additional php.ini when run php from terminal"},{"location":"bash/#convert-dos-to-unix-newlines-in-current-directory-excluding-git-directory","text":"find . -type f -not -path './.git/*' -print0 | xargs -0 dos2unix","title":"Convert DOS to Unix newlines in current directory excluding .git directory"},{"location":"bash/#use-custom-ssh-port-with-rsyncsshscpsshfs","text":"rsync -avz -e \"ssh -p 2244\" --exclude=var user@server.com:/html/ . ssh user@server.com -p 2244 scp -P 2244 user@server.com:/html/website_db.sql . sshfs user@server.com:/html -p 2244 server.com","title":"Use custom SSH port with rsync/ssh/scp/sshfs"},{"location":"bash/#upload-multiple-files-wo-file-name-duplication","text":"scp {,user@example.com:~/}public_html/index.php scp {,user@example.com:~/}public_html/.htaccess scp {,user@example.com:~/}public_html/images/logo.png scp {,user@example.com:~/}public_html/js/jquery.js","title":"Upload multiple files w/o file name duplication"},{"location":"bash/#useful-links","text":"How to parse command line arguments","title":"Useful links"},{"location":"git/","text":"Daily Routine Update local list of remote branches git branch -a git remote update origin --prune Adding a remote git remote -v git remote add origin https://domain.com/myrepo.git Merge branch as new commit git merge --squash branch_name git commit Setup Global .gitignore git config --global core.excludesfile ~/.gitignore vi ~/.gitignore Add your global ignores, e.g: .idea vendor studio Store passwords git config --global credential.helper store Workaround with 403 error git config --global --unset-all credential.helper git config --unset-all credential.helper","title":"Git"},{"location":"git/#daily-routine","text":"","title":"Daily Routine"},{"location":"git/#update-local-list-of-remote-branches","text":"git branch -a git remote update origin --prune","title":"Update local list of remote branches"},{"location":"git/#adding-a-remote","text":"git remote -v git remote add origin https://domain.com/myrepo.git","title":"Adding a remote"},{"location":"git/#merge-branch-as-new-commit","text":"git merge --squash branch_name git commit","title":"Merge branch as new commit"},{"location":"git/#setup","text":"","title":"Setup"},{"location":"git/#global-gitignore","text":"git config --global core.excludesfile ~/.gitignore vi ~/.gitignore Add your global ignores, e.g: .idea vendor studio","title":"Global .gitignore"},{"location":"git/#store-passwords","text":"git config --global credential.helper store","title":"Store passwords"},{"location":"git/#workaround-with-403-error","text":"git config --global --unset-all credential.helper git config --unset-all credential.helper","title":"Workaround with 403 error"},{"location":"htaccess/","text":"Disable Browser Cache for specific folder Place the following line into .htaccess: Header set Pragma \"no-cache\" \"expr=%{REQUEST_URI}=~/VendorName/i\" As result url with \"VendorName\" in path will get Pragma \"no-cache\" http header, so browser won't cache it. This trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only. Basic Auth with URL exception Access /dir/subdir/file.txt file without authorization SetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth AuthType Basic AuthUserFile /home/user/public_html/.htpasswd AuthName \"Restricted Area\" Require valid-user Order allow,deny Allow from env=no_auth Satisfy any Define base path as environment variable for further usage RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$ RewriteRule ^(.*) - [E=BASE:%1] RewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]","title":"Htaccess"},{"location":"htaccess/#disable-browser-cache-for-specific-folder","text":"Place the following line into .htaccess: Header set Pragma \"no-cache\" \"expr=%{REQUEST_URI}=~/VendorName/i\" As result url with \"VendorName\" in path will get Pragma \"no-cache\" http header, so browser won't cache it. This trick is very useful for magento developers who are working with js components or html templates and want to disable cache for a certain folder only.","title":"Disable Browser Cache for specific folder"},{"location":"htaccess/#basic-auth-with-url-exception","text":"Access /dir/subdir/file.txt file without authorization SetEnvIf Request_URI \"dir\\/subdir\\/file\\.txt$\" no_auth AuthType Basic AuthUserFile /home/user/public_html/.htpasswd AuthName \"Restricted Area\" Require valid-user Order allow,deny Allow from env=no_auth Satisfy any","title":"Basic Auth with URL exception"},{"location":"htaccess/#define-base-path-as-environment-variable-for-further-usage","text":"RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\\2$ RewriteRule ^(.*) - [E=BASE:%1] RewriteRule ^(.*)$ %{ENV:BASE}/index.php [L]","title":"Define base path as environment variable for further usage"},{"location":"mysql/","text":"Store mysql user name and password To use mysql and mysqldump commands without password just store credentials in ~/.my.cnf file, e.g.: [client] user=\"devuser\" password=\"devpassword\" Dump database w/o DEFINER dbName='dbname' mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' $dbName.sql","title":"Mysql"},{"location":"mysql/#store-mysql-user-name-and-password","text":"To use mysql and mysqldump commands without password just store credentials in ~/.my.cnf file, e.g.: [client] user=\"devuser\" password=\"devpassword\"","title":"Store mysql user name and password"},{"location":"mysql/#dump-database-wo-definer","text":"dbName='dbname' mysqldump --opt $dbName | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' $dbName.sql","title":"Dump database w/o DEFINER"},{"location":"network/","text":"Get my IP Address ifconfig eth1 | awk '/inet addr/{print substr($2,6)}' LEDE/OpenWRT Speed test with iperf (Kyivstar) opkg update opkg install iperf iperf -c 193.41.63.185 -u -b 100m -r Set up Dropbear public key authentication ssh-copy-id root@192.168.1.1 ssh root@192.168.1.1 cp /root/.ssh/authorized_keys /etc/dropbear/ chmod 700 /etc/dropbear chmod 600 /etc/dropbear/authorized_keys IP Addresses daily log (cron job) 0 4 * * * echo `date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}') /root/ip.log","title":"Network"},{"location":"network/#get-my-ip-address","text":"ifconfig eth1 | awk '/inet addr/{print substr($2,6)}'","title":"Get my IP Address"},{"location":"network/#ledeopenwrt","text":"","title":"LEDE/OpenWRT"},{"location":"network/#speed-test-with-iperf-kyivstar","text":"opkg update opkg install iperf iperf -c 193.41.63.185 -u -b 100m -r","title":"Speed test with iperf (Kyivstar)"},{"location":"network/#set-up-dropbear-public-key-authentication","text":"ssh-copy-id root@192.168.1.1 ssh root@192.168.1.1 cp /root/.ssh/authorized_keys /etc/dropbear/ chmod 700 /etc/dropbear chmod 600 /etc/dropbear/authorized_keys","title":"Set up Dropbear public key authentication"},{"location":"network/#ip-addresses-daily-log-cron-job","text":"0 4 * * * echo `date +%Y-%m-%d` $(ifconfig eth1 | awk '/inet addr/{print substr($2,6)}') /root/ip.log","title":"IP Addresses daily log (cron job)"}]}